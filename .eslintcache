[{"D:\\reacttut\\todoredux\\src\\index.js":"1","D:\\reacttut\\todoredux\\src\\App.js":"2","D:\\reacttut\\todoredux\\src\\reportWebVitals.js":"3","D:\\reacttut\\todoredux\\src\\todolist\\TodoList.js":"4","D:\\reacttut\\todoredux\\src\\todolist\\reducer.js":"5","D:\\reacttut\\todoredux\\src\\todolist\\login.js":"6","D:\\reacttut\\todoredux\\src\\todolist\\Heder.js":"7","D:\\reacttut\\todoredux\\src\\todolist\\AddTodo.js":"8","D:\\reacttut\\todoredux\\src\\todolist\\VisibilityFilters.js":"9","D:\\reacttut\\todoredux\\src\\todolist\\Task.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":928,"mtime":1609517830719,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":925,"mtime":1609475847767,"results":"15","hashOfConfig":"12"},{"size":976,"mtime":1609489850509,"results":"16","hashOfConfig":"12"},{"size":1794,"mtime":1609489683961,"results":"17","hashOfConfig":"12"},{"size":301,"mtime":1609083606196,"results":"18","hashOfConfig":"12"},{"size":911,"mtime":1609345751890,"results":"19","hashOfConfig":"12"},{"size":1293,"mtime":1609345630561,"results":"20","hashOfConfig":"12"},{"size":1290,"mtime":1609475486031,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"ngtcqx",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},"D:\\reacttut\\todoredux\\src\\index.js",[],["49","50"],"D:\\reacttut\\todoredux\\src\\App.js",["51"],"import React, { Component } from 'react';  \r\nimport TodoList from './todolist/TodoList'\r\nimport {BrowserRouter,Route,Switch} from 'react-router-dom'\r\nimport Login from \"./todolist/login\"\r\nimport {createStore} from 'redux' \r\nimport {Provider} from 'react-redux'\r\nimport reducer from './todolist/reducer'\r\n\r\n\r\n\r\nconst initState={\r\n    todoList : [],\r\n    Login : []\r\n}\r\nconst store = createStore(reducer,initState)\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n      \r\n    }\r\n   \r\n    render() { \r\n        return (<div>  \r\n                <Provider store={store}>\r\n            <BrowserRouter>\r\n            <Switch>\r\n                <Route  exact path=\"/\" component={Login} />\r\n                <Route   path=\"/todolist\" component={TodoList} />\r\n            </Switch>\r\n            </BrowserRouter>  \r\n            </Provider>     \r\n            \r\n        </div>  );\r\n    }\r\n}\r\n \r\nexport default App;","D:\\reacttut\\todoredux\\src\\reportWebVitals.js",[],"D:\\reacttut\\todoredux\\src\\todolist\\TodoList.js",["52"],"import React, { Component } from 'react';\r\nimport Header from './Heder'\r\nimport AddTodo from './AddTodo'\r\nimport { connect } from 'react-redux'\r\n\r\nimport VisibilityFilters from './VisibilityFilters'\r\n\r\nclass TodoList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (<div>\r\n\r\n            <Header />\r\n            <button onClick={()=>this.props.history.push('/')}>Log out</button>\r\n            {this.props.Login.map(item => {\r\n                return <h3 style={{ textAlign: \"right\" }}>{`Hi, ${item.username}`}</h3>\r\n            })}\r\n\r\n            <div style={{textAlign:\"center\",marginTop:\"50px\"}}>\r\n\r\n                <AddTodo />\r\n\r\n                <VisibilityFilters />\r\n            </div>\r\n\r\n        </div>);\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps)(TodoList)","D:\\reacttut\\todoredux\\src\\todolist\\reducer.js",["53"],"export default function reducer (state={},action){\r\n    switch (action.type) {\r\n        case \"ADD_TASK\":{\r\n            const newstate={...state,todoList:[...state.todoList,action.payload]}\r\n            return newstate\r\n        }\r\n            case  \"TOGGLE\" :{\r\n                const updateState ={...state,todoList:[...state.todoList.slice(0,action.payload),{...state.todoList[action.payload],complete:!state.todoList[action.payload].complete},...state.todoList.slice(action.payload+1)]}\r\n                return updateState\r\n            }\r\n            case \"DELETE\":{\r\n                const nstate = {...state,todoList:[...state.todoList.filter((item,index)=>index!=action.payload)]}\r\n                return nstate\r\n            }\r\n           case \"LOGIN_NOW\" :{\r\n               const loginstate = {...state,Login:[ {username:action.payload.username,pwd:action.payload.pwd}]}\r\n               return loginstate\r\n           }\r\n        default:\r\n          return state  \r\n    }\r\n}","D:\\reacttut\\todoredux\\src\\todolist\\login.js",["54"],"import React, { Component } from 'react';\r\nimport {connect} from  'react-redux'\r\n\r\nconst mystyle={\r\n    container:{\r\n        margin: \"100px auto\",\r\n        widtgh: \"50px\",\r\n        width: \"190px\",\r\n        border: \"1px solid\",\r\n        padding: \"41px\",\r\n        height: \"237px\",\r\n        \r\n    },\r\n    input :{\r\n        marginBottom:\"5px\",\r\n        padding:\"6px 4px\"\r\n    },\r\n    button:\r\n    {\r\n        fontSize:\"10px\",\r\n        margin: \"5px\",\r\n        backgroundColor: \"blue\",\r\n        color: \"white\",\r\n        fontWeight: \"bold\",\r\n        fontSize: \"15px\"\r\n    }\r\n}\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { username:\"\",pwd:\"\" }\r\n    }\r\n    handleSubmit=(state)=>{\r\n        this.props.loginDetails(state)\r\n       this.props.history.push('/todolist')\r\n\r\n    }\r\n    render() { \r\n        return (<div style={mystyle.container}>\r\n            <h2> Login here! </h2>\r\n            <input style={mystyle.input} placeholder=\"Enter username..\"  type = \"text\" value={this.state.username}\r\n             onChange={(e)=>this.setState({username:e.target.value})}/>\r\n            <br></br>\r\n            <input style={mystyle.input} placeholder=\"Enter password..\"  type = \"text\" value={this.state.pwd} \r\n            onChange={(e)=>this.setState({pwd:e.target.value})}/>\r\n            <br></br>\r\n            <button style={mystyle.button} \r\n            onClick ={()=>this.handleSubmit(this.state)}>Log In</button>\r\n            \r\n        </div>  );\r\n    }\r\n}\r\nconst mapStateToProps=state=>{\r\n   return {\r\n       Login : state.Login\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps=dispatch=>{\r\n    return {\r\n        loginDetails: val=>dispatch({type:\"LOGIN_NOW\",payload:val})\r\n    }\r\n    \r\n\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Login)","D:\\reacttut\\todoredux\\src\\todolist\\Heder.js",[],"D:\\reacttut\\todoredux\\src\\todolist\\AddTodo.js",[],"D:\\reacttut\\todoredux\\src\\todolist\\VisibilityFilters.js",["55","56"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Task from './Task'\r\nclass VisibilityFilters extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { filter: \"all\" }\r\n    }\r\n    \r\n    render() {\r\n     \r\n        return (<div>\r\n\r\n    { this.props.todoList\r\n        .filter((item, index) => {\r\n          if (this.state.filter == \"all\") {\r\n            return true;\r\n          } else if (this.state.filter == \"completed\") {\r\n            return item.complete;\r\n          } else {\r\n            return !item.complete;\r\n          }\r\n        }).map((item,index)=>{\r\n\r\n          return (\r\n              <Task task={item} ind={index} complete={item.complete}/>\r\n          )\r\n      })}\r\n     \r\n\r\n            <button value=\"all\" onClick={(e) => { this.setState({ filter: e.target.value }) }}>All</button>\r\n            <button value=\"completed\" onClick={(e) => { this.setState({ filter: e.target.value }) }}>Complete</button>\r\n            <button value=\"incomplete\" onClick={(e) => { this.setState({ filter: e.target.value }) }}>Incomplete</button>\r\n        </div>);\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        todoList: state.todoList\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(VisibilityFilters)","D:\\reacttut\\todoredux\\src\\todolist\\Task.js",["57"],"import React, { Component } from 'react';\r\nimport {connect} from 'react-redux'\r\n\r\nclass Task extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n    }\r\n    handleClick=(ind)=>{\r\n       \r\n       this.props.toggle(ind)\r\n    }\r\n    handleDelete=(ind)=>{\r\n        console.log(ind)\r\n        this.props.delete(ind)\r\n    }\r\n    render() { \r\n      \r\n        return ( <div>\r\n          \r\n            <ul style={{listStyle:\"none\"}}>\r\n                <li style={{textDecoration:this.props.complete?\"line-through\":null,fontWeight:\"bold\"}}>\r\n                 \r\n                \r\n                   {this.props.task.todoTask}\r\n                     <input type=\"checkbox\" checked={this.props.complete} onClick={()=>this.handleClick(this.props.ind)}/>\r\n                     <button onClick={()=>this.handleDelete(this.props.ind)}>Delete</button>\r\n                     \r\n                </li>\r\n            </ul>\r\n        </div> );\r\n    }\r\n}\r\nconst mapStateToProps= state=>{\r\n   return {\r\n    todoList: state.TodoList,\r\n    \r\n   }   \r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n    return {\r\n        toggle:val=>dispatch({type:\"TOGGLE\",payload:val}),\r\n        delete : val=>dispatch({type:\"DELETE\",payload:val})\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Task)",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":17,"column":5,"nodeType":"64","messageId":"65","endLine":20,"endColumn":6},{"ruleId":"62","severity":1,"message":"63","line":9,"column":5,"nodeType":"64","messageId":"65","endLine":12,"endColumn":6},{"ruleId":"66","severity":1,"message":"67","line":12,"column":96,"nodeType":"68","messageId":"69","endLine":12,"endColumn":98},{"ruleId":"70","severity":1,"message":"71","line":25,"column":9,"nodeType":"72","messageId":"69","endLine":25,"endColumn":17},{"ruleId":"66","severity":1,"message":"73","line":16,"column":33,"nodeType":"68","messageId":"69","endLine":16,"endColumn":35},{"ruleId":"66","severity":1,"message":"73","line":18,"column":40,"nodeType":"68","messageId":"69","endLine":18,"endColumn":42},{"ruleId":"62","severity":1,"message":"63","line":5,"column":5,"nodeType":"64","messageId":"65","endLine":8,"endColumn":6},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-dupe-keys","Duplicate key 'fontSize'.","ObjectExpression","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]